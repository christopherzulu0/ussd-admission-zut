// Function to make a payment request to PawaPay
async function makeAirtelPayment(amount, phoneNumber,receiverNumber) {
  const airtelEndpoint = "https://openapiuat.airtel.africa/auth/oauth2/token";
  const clientId = "7367cd1d-1045-447f-8fc6-318aacffed2a "; // Replace with your Airtel Africa Client ID
  const clientSecret = "****************************"; // Replace with your Airtel Africa Client Secret

  const transactionId = uuidv4();

  const authHeaders = Buffer.from(`${clientId}:${clientSecret}`).toString("base64");

  const payload = {
    accountReference: transactionId,
    mobileNumber: phoneNumber,
    country: "ZMB",
    currency: "ZMW",
    amount: amount,
    channel: "PAYER",
    payer: {
      partyIdType: "MSISDN",
      partyId: receiverNumber,
    },
    payerMessage: "Payment from sender",
    payeeNote: "Payment to receiver",
  };

  const requestOptions = {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Basic ${authHeaders}`,
    },
    body: JSON.stringify(payload),
  };

  const curlCommand = `curl -X POST -H "Content-Type: application/json" -H "Authorization: Basic ${authHeaders}" -d '${JSON.stringify(payload)}' ${airtelEndpoint}`;

  try {
    const { stdout, stderr } = await exec(curlCommand);
    const response = JSON.parse(stdout);
    console.log("API response:", response);
    return response;
  } catch (error) {
    console.error("Payment request error:", error);
    throw new Error("Payment request failed");
  }
}


//PawaPay Airtel Payouts
async function airtelPayouts(amount,phoneNumber,receiverNumber) {
  const pawaPayEndpoint = process.env.pawaPayEndpoint; // PawaPay API endpoint
  const apiKey = process.env.PawaPayKey; // Replace with your PawaPay API key
  const user = await User.findOne({number:phoneNumber});
console.log(receiverNumber);

  const payload = {
    payoutId: uuidv4(),
    amount: amount.toString(),
    currency: "ZMW",
    country: "ZMB",
    correspondent: "AIRTEL_OAPI_ZMB",
    recipient: {
      type: "MSISDN",
      address: {
        value: receiverNumber
      }
    },
    customerTimestamp: new Date().toISOString(),
    statementDescription: "Ow to 22 chars note",
    created: new Date().toISOString(),
    receivedByRecipient: new Date().toISOString(),
    correspondentIds: {
      AIRTEL_INIT: "764724",
      AIRTEL_FINAL: "hsdhs21"
    },
    failureReason: {
      failureCode: "OTHER_ERROR",
      failureMessage: "Recipient's address is blocked"
    }
  };

  const requestOptions = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${apiKey}`
    },
    body: JSON.stringify(payload)
  };

  try {
    const response = await fetch(pawaPayEndpoint, requestOptions);
    const data = await response.json();
    console.log("API response:", data);
    return data;
  } catch (error) {
    console.error("Payment request error:", error);
    throw new Error("Payment request failed");
  }
}



//PawaPay MTN Payouts
async function mtnPayouts(amount,phoneNumber,receiverNumber) {
  const pawaPayEndpoint = process.env.pawaPayEndpoint; // PawaPay API endpoint
  const apiKey = process.env.PawaPayKey; // Replace with your PawaPay API key
  const user = await User.findOne({number:phoneNumber});
  const ActualNumber = user.number;
  const payload = {
    payoutId: uuidv4(),
    amount: amount.toString(),
    currency: "ZMW",
    country: "ZMB",
    correspondent: "AIRTEL_OAPI_ZMB",
    recipient: {
      type: "MSISDN",
      address: {
        value: receiverNumber
      }
    },
    customerTimestamp: new Date().toISOString(),
    statementDescription: "Ow to 22 chars note",
    created: new Date().toISOString(),
    receivedByRecipient: new Date().toISOString(),
    correspondentIds: {
      AIRTEL_INIT: "764724",
      AIRTEL_FINAL: "hsdhs21"
    },
    failureReason: {
      failureCode: "OTHER_ERROR",
      failureMessage: "Recipient's address is blocked"
    }
  };

  const requestOptions = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${apiKey}`
    },
    body: JSON.stringify(payload)
  };

  try {
    const response = await fetch(pawaPayEndpoint, requestOptions);
    const data = await response.json();
    console.log("API response:", data);
    return data;
  } catch (error) {
    console.error("Payment request error:", error);
    throw new Error("Payment request failed");
  }
}

//PawaPay AirtelDeposits
async function airtelDeposits(amount,phoneNumber,receiverNumber) {
  const pawaPayEndpoint = process.env.pawaPayEndpoint; // PawaPay API endpoint
  const apiKey = process.env.PawaPayKey; // Replace with your PawaPay API key
  const user = await User.findOne({number:phoneNumber});
  const ActualNumber = user.number;
  const payload = {
    depositId: uuidv4(),
    amount: amount.toString(),
    currency: "ZMW",
    country: "ZMB",
    correspondent: "AIRTEL_OAPI_ZMB",
    recipient: {
      type: "MSISDN",
      address: {
        value: "260973663366"
      }
    },
    customerTimestamp: new Date().toISOString(),
    statementDescription: "Ow to 22 chars note",
    created: new Date().toISOString(),
    receivedByRecipient: new Date().toISOString(),
    correspondentIds: {
      AIRTEL_INIT: "764724",
      AIRTEL_FINAL: "hsdhs21"
    },
    failureReason: {
      failureCode: "OTHER_ERROR",
      failureMessage: "Recipient's address is blocked"
    }
  };

  const requestOptions = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${apiKey}`
    },
    body: JSON.stringify(payload)
  };

  try {
    const response = await fetch(pawaPayEndpoint, requestOptions);
    const data = await response.json();
    console.log("API response:", data);
    return data;
  } catch (error) {
    console.error("Payment request error:", error);
    throw new Error("Payment request failed");
  }
}

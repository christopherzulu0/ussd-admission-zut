const handleNonRegisteredUser = async (textArray, phoneNumber) => {
    let response = "";
      let text = ''
      const level = textArray.length;
  
      if(level === 1){
        response = `CON Please choose an option
                     1. Join a group
                     2. Create a group
                    `;
  
      return response;
      }
      
      
      
      if(level == 2 && textArray[1] == 2){
        response = `CON Enter your fullname`;
        return response;
      }if(level == 3 ){
        response = `CON The Government type can be 
                    1.Admin 
                    2.Multi-Admin 
                    3.1 vote per person 
                    4.1 vote per $ deposit
                  `;
        return response;
      }if(level == 4 && textArray[3] ==1 ){
        response = `CON Enter group name`;
        return response;
      }if(level == 5 ){
        response = `CON Enter deposit  goal`;
        return response;
      }if(level == 6 ){
        response = `CON Enter new group Invite code `;
        return response;
      }if(level == 7 ){
        response = `CON Enter penalty fee`;
        return response;
      }if(level == 8){
        response = `CON Verfiy info before continuing
                     Gov Type = Admin
                     Admins = ${textArray[3]}
                     Circle Name =  ${textArray[4]}
                     Deposit Goal = ${textArray[5]}
                     Late Penalty = ${textArray[7]}

                     1.Confirm & Continue
                     2.Redo
                   `;
        return response;
      }if(level == 9 && textArray[8] == 1 ){
        response = `CON Enter a user number to invite `;
        return response;
      }if(level == 10 ){
        async function confirmDetails() {
          const userNumber = countryCode(textArray[9]);
          let user = await User.findOne({ number: userNumber });
          return user;
        }
      
        // Assigns the user to a variable for manipulation
        let user = await confirmDetails();

        

        if(user){
          let circlemember = textArray[9];
            response = `CON ${circlemember}, is a user on pollen
                        1. Add new number
                        2. Finish making a circle
                       `;
          let phoneNumber = textArray[9];
          let circle = textArray[4];
          let code = textArray[6];

                       sendSMS(phoneNumber, `You have been invited to join ${circle} and group invite code is ${code}.Since you are not yet a member of this group.`);
            return response;
          
        }
      }if(level == 11 && textArray[10] == 1){
        response = `CON Enter a user number to invite `;
        return response;
      }if(level == 12){
        let membernumber = textArray[11];
        membernumber = phoneNumber;

          let circle = textArray[4];
          let code = textArray[6];

        sendSMS2(membernumber, `You have been invited to join ${circle} and group invite code is ${code}.`);
         response = `CON You have successfully invited ${textArray[11]},to join the circle.
                    1. Finish making a circle`;
                return response;  
      }if(level == 13 && textArray[12] == 1){
         async function createGroup() {
         
          const SavingsData = {
           AdminNumber: phoneNumber,
           AdminName: textArray[2],
           GroupName: textArray[4],
           DepositGoal: textArray[5],
           GroupCode: textArray[6],
           Penalty: textArray[7],
          };
          
  
          // create user and register to DB
          let Member = await Savings.create(SavingsData);
          return Member;
        }
  
        // Assigns the created user to a variable for manipulation
        let Member = await createGroup();
        // If user creation failed
        if (!Member) {
          response = "END An unexpected error occurred... Please try again later";
        }
        // if user creation was successful
        else {
          let owner =Member.AdminName;
          let code = Member.GroupCode;
          
      // Call the sendSMS function after successful registration
          // sendSMS2(phoneNumber, "Congratulations! You have successfully registered with Pollen.");
          response = `END Congratulations ${owner}, You have successfully registered the group. Your group invite code is ${code} .
             
          `;
        }    // proceed to register user
     
      }if(level == 14 && textArray[10] == 2){
        // proceed to register user
        async function createGroup() {
         
          const SavingsData = {
           AdminNumber: phoneNumber,
           AdminName: textArray[2],
           GroupName: textArray[4],
           DepositGoal: textArray[5],
           GroupCode: textArray[6],
           Penalty: textArray[7],
          };
          
  
          // create user and register to DB
          let Member = await Savings.create(SavingsData);
          return Member;
        }
  
        // Assigns the created user to a variable for manipulation
        let Member = await createGroup();
        // If user creation failed
        if (!Member) {
          response = "END An unexpected error occurred... Please try again later";
        }
        // if user creation was successful
        else {
          let owner =Member.AdminName;
          let code = Member.GroupCode;
          
      // Call the sendSMS function after successful registration
          // sendSMS2(phoneNumber, "Congratulations! You have successfully registered with Pollen.");
          response = `END Congratulations ${owner}, You have successfully registered the group. Your group invite code is ${code} .
             
          `;
        }
      }
        
        
      return response;
    
  };
  

  Susyz-bY4E!JDTd Gmail
  Precious_196822  Appleid

  pnakazwe@icloud.coom
  Pn196822